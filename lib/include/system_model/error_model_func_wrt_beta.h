// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: error_model_func_wrt_beta
 *
 * Args:
 *     theta11: Scalar
 *     theta12: Scalar
 *     theta21: Scalar
 *     theta22: Scalar
 *     alpha: Scalar
 *     beta: Scalar
 *     RotGT1: Rot3
 *     RotGT2: Rot3
 *     RotHandEye: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> ErrorModelFuncWrtBeta(
    const Scalar theta11, const Scalar theta12, const Scalar theta21, const Scalar theta22,
    const Scalar alpha, const Scalar beta, const sym::Rot3<Scalar>& RotGT1,
    const sym::Rot3<Scalar>& RotGT2, const sym::Rot3<Scalar>& RotHandEye, const Scalar epsilon) {
  // Total ops: 879

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT1 = RotGT1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT2 = RotGT2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotHandEye = RotHandEye.Data();

  // Intermediate terms (262)
  const Scalar _tmp0 = -_RotGT1[0] * _RotGT2[3] - _RotGT1[1] * _RotGT2[2] +
                       _RotGT1[2] * _RotGT2[1] + _RotGT1[3] * _RotGT2[0];
  const Scalar _tmp1 = _RotGT1[0] * _RotGT2[2] - _RotGT1[1] * _RotGT2[3] - _RotGT1[2] * _RotGT2[0] +
                       _RotGT1[3] * _RotGT2[1];
  const Scalar _tmp2 = -_RotGT1[0] * _RotGT2[1] + _RotGT1[1] * _RotGT2[0] -
                       _RotGT1[2] * _RotGT2[3] + _RotGT1[3] * _RotGT2[2];
  const Scalar _tmp3 = _RotGT1[0] * _RotGT2[0] + _RotGT1[1] * _RotGT2[1] + _RotGT1[2] * _RotGT2[2] +
                       _RotGT1[3] * _RotGT2[3];
  const Scalar _tmp4 = -_RotHandEye[0] * _tmp1 + _RotHandEye[1] * _tmp0 - _RotHandEye[2] * _tmp3 +
                       _RotHandEye[3] * _tmp2;
  const Scalar _tmp5 = -_RotHandEye[0] * _tmp3 - _RotHandEye[1] * _tmp2 + _RotHandEye[2] * _tmp1 +
                       _RotHandEye[3] * _tmp0;
  const Scalar _tmp6 = _RotHandEye[0] * _tmp2 - _RotHandEye[1] * _tmp3 - _RotHandEye[2] * _tmp0 +
                       _RotHandEye[3] * _tmp1;
  const Scalar _tmp7 = _RotHandEye[0] * _tmp0 + _RotHandEye[1] * _tmp1 + _RotHandEye[2] * _tmp2 +
                       _RotHandEye[3] * _tmp3;
  const Scalar _tmp8 = -_RotHandEye[0] * _tmp5 - _RotHandEye[1] * _tmp6 - _RotHandEye[2] * _tmp4 +
                       _RotHandEye[3] * _tmp7;
  const Scalar _tmp9 = std::sin(beta);
  const Scalar _tmp10 = Scalar(1.0) / (_tmp9);
  const Scalar _tmp11 = (Scalar(1) / Scalar(2)) * theta21 + (Scalar(1) / Scalar(2)) * theta22;
  const Scalar _tmp12 = std::cos(_tmp11);
  const Scalar _tmp13 = std::cos(beta);
  const Scalar _tmp14 = std::cos(alpha);
  const Scalar _tmp15 = _tmp13 + _tmp14;
  const Scalar _tmp16 = Scalar(1.0) / (_tmp15);
  const Scalar _tmp17 = std::pow(_tmp9, Scalar(2));
  const Scalar _tmp18 = (Scalar(1) / Scalar(2)) * theta21 - Scalar(1) / Scalar(2) * theta22;
  const Scalar _tmp19 = std::sin(alpha);
  const Scalar _tmp20 = std::pow(_tmp19, Scalar(2));
  const Scalar _tmp21 =
      std::sqrt(Scalar(_tmp17 - _tmp20 * std::pow(Scalar(std::sin(_tmp18)), Scalar(2))));
  const Scalar _tmp22 = _tmp19 * std::cos(_tmp18) + _tmp21;
  const Scalar _tmp23 = 2 * std::atan(_tmp16 * _tmp22);
  const Scalar _tmp24 = std::sin(_tmp23);
  const Scalar _tmp25 = _tmp19 * std::sin(theta21);
  const Scalar _tmp26 = _tmp24 * _tmp25;
  const Scalar _tmp27 = std::sin(_tmp11);
  const Scalar _tmp28 = _tmp19 * std::cos(theta21);
  const Scalar _tmp29 = _tmp24 * _tmp28;
  const Scalar _tmp30 = -_tmp12 * _tmp26 + _tmp27 * _tmp29;
  const Scalar _tmp31 = std::cos(_tmp23);
  const Scalar _tmp32 = _tmp25 * _tmp31;
  const Scalar _tmp33 = _tmp14 * _tmp24;
  const Scalar _tmp34 = -_tmp27 * _tmp33 + _tmp32;
  const Scalar _tmp35 = -_tmp14 * _tmp34 + _tmp28 * _tmp30;
  const Scalar _tmp36 = _tmp10 * _tmp35;
  const Scalar _tmp37 = _tmp10 * _tmp34;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp28 * _tmp31;
  const Scalar _tmp40 = _tmp12 * _tmp33 - _tmp39;
  const Scalar _tmp41 = _tmp14 * _tmp40 - _tmp25 * _tmp30;
  const Scalar _tmp42 = _tmp10 * _tmp41;
  const Scalar _tmp43 = _tmp10 * _tmp40;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = _tmp14 + _tmp44;
  const Scalar _tmp46 =
      -std::max<Scalar>(_tmp14, std::max<Scalar>(_tmp42, std::max<Scalar>(_tmp43, _tmp45)));
  const Scalar _tmp47 =
      1 - std::max<Scalar>(0, -(((_tmp42 + _tmp46) > 0) - ((_tmp42 + _tmp46) < 0)));
  const Scalar _tmp48 = -_tmp43;
  const Scalar _tmp49 = 1 - _tmp14;
  const Scalar _tmp50 = _tmp42 + _tmp48 + _tmp49;
  const Scalar _tmp51 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp50)));
  const Scalar _tmp52 = -_tmp47 + _tmp51 + 1;
  const Scalar _tmp53 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp54 = _tmp53 / _tmp52;
  const Scalar _tmp55 = _tmp10 * _tmp30;
  const Scalar _tmp56 = _tmp25 + _tmp55;
  const Scalar _tmp57 = -_tmp42;
  const Scalar _tmp58 = _tmp14 + 1;
  const Scalar _tmp59 = _tmp48 + _tmp57 + _tmp58;
  const Scalar _tmp60 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp59)));
  const Scalar _tmp61 = _tmp14 + _tmp46;
  const Scalar _tmp62 = std::min<Scalar>(
      1 - std::max<Scalar>(0, _tmp47),
      1 - std::max<Scalar>(0, -(((_tmp43 + _tmp46) > 0) - ((_tmp43 + _tmp46) < 0))));
  const Scalar _tmp63 =
      std::min<Scalar>(1 - std::max<Scalar>(0, std::max<Scalar>(_tmp47, _tmp62)),
                       1 - std::max<Scalar>(0, -(((_tmp61) > 0) - ((_tmp61) < 0))));
  const Scalar _tmp64 = _tmp60 - _tmp63 + 1;
  const Scalar _tmp65 = (Scalar(1) / Scalar(2)) * _tmp63;
  const Scalar _tmp66 = _tmp65 / _tmp64;
  const Scalar _tmp67 = _tmp43 + _tmp49 + _tmp57;
  const Scalar _tmp68 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp67)));
  const Scalar _tmp69 = -_tmp62 + _tmp68 + 1;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp62;
  const Scalar _tmp71 = _tmp25 * _tmp34 - _tmp28 * _tmp40;
  const Scalar _tmp72 = _tmp10 * _tmp71;
  const Scalar _tmp73 = -_tmp28 + _tmp72;
  const Scalar _tmp74 = _tmp45 + 1;
  const Scalar _tmp75 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp74)));
  const Scalar _tmp76 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp47, std::max<Scalar>(_tmp62, _tmp63))),
      1 - std::max<Scalar>(0, -(((_tmp44 + _tmp61) > 0) - ((_tmp44 + _tmp61) < 0))));
  const Scalar _tmp77 = _tmp75 - _tmp76 + 1;
  const Scalar _tmp78 = (Scalar(1) / Scalar(2)) * _tmp76;
  const Scalar _tmp79 = _tmp78 / _tmp77;
  const Scalar _tmp80 = _tmp38 * _tmp54 + _tmp56 * _tmp66 + _tmp69 * _tmp70 + _tmp73 * _tmp79;
  const Scalar _tmp81 = (Scalar(1) / Scalar(2)) * theta11 + (Scalar(1) / Scalar(2)) * theta12;
  const Scalar _tmp82 = std::sin(_tmp81);
  const Scalar _tmp83 = (Scalar(1) / Scalar(2)) * theta11 - Scalar(1) / Scalar(2) * theta12;
  const Scalar _tmp84 =
      std::sqrt(Scalar(_tmp17 - _tmp20 * std::pow(Scalar(std::sin(_tmp83)), Scalar(2))));
  const Scalar _tmp85 = _tmp19 * std::cos(_tmp83) + _tmp84;
  const Scalar _tmp86 = 2 * std::atan(_tmp16 * _tmp85);
  const Scalar _tmp87 = std::sin(_tmp86);
  const Scalar _tmp88 = _tmp14 * _tmp87;
  const Scalar _tmp89 = std::cos(_tmp86);
  const Scalar _tmp90 = _tmp19 * std::sin(theta11);
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = -_tmp82 * _tmp88 + _tmp91;
  const Scalar _tmp93 = _tmp10 * _tmp92;
  const Scalar _tmp94 = _tmp19 * std::cos(theta11);
  const Scalar _tmp95 = _tmp87 * _tmp94;
  const Scalar _tmp96 = std::cos(_tmp81);
  const Scalar _tmp97 = _tmp87 * _tmp90;
  const Scalar _tmp98 = _tmp82 * _tmp95 - _tmp96 * _tmp97;
  const Scalar _tmp99 = -_tmp14 * _tmp92 + _tmp94 * _tmp98;
  const Scalar _tmp100 = _tmp10 * _tmp99;
  const Scalar _tmp101 = -_tmp100 + _tmp93;
  const Scalar _tmp102 = _tmp89 * _tmp94;
  const Scalar _tmp103 = -_tmp102 + _tmp88 * _tmp96;
  const Scalar _tmp104 = _tmp10 * _tmp103;
  const Scalar _tmp105 = _tmp103 * _tmp14 - _tmp90 * _tmp98;
  const Scalar _tmp106 = _tmp10 * _tmp105;
  const Scalar _tmp107 = _tmp104 + _tmp106;
  const Scalar _tmp108 = _tmp107 + _tmp14;
  const Scalar _tmp109 = _tmp108 + 1;
  const Scalar _tmp110 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp109)));
  const Scalar _tmp111 =
      -std::max<Scalar>(_tmp104, std::max<Scalar>(_tmp106, std::max<Scalar>(_tmp108, _tmp14)));
  const Scalar _tmp112 = _tmp111 + _tmp14;
  const Scalar _tmp113 =
      1 - std::max<Scalar>(0, -(((_tmp106 + _tmp111) > 0) - ((_tmp106 + _tmp111) < 0)));
  const Scalar _tmp114 = std::min<Scalar>(
      1 - std::max<Scalar>(0, _tmp113),
      1 - std::max<Scalar>(0, -(((_tmp104 + _tmp111) > 0) - ((_tmp104 + _tmp111) < 0))));
  const Scalar _tmp115 =
      std::min<Scalar>(1 - std::max<Scalar>(0, std::max<Scalar>(_tmp113, _tmp114)),
                       1 - std::max<Scalar>(0, -(((_tmp112) > 0) - ((_tmp112) < 0))));
  const Scalar _tmp116 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp113, std::max<Scalar>(_tmp114, _tmp115))),
      1 - std::max<Scalar>(0, -(((_tmp107 + _tmp112) > 0) - ((_tmp107 + _tmp112) < 0))));
  const Scalar _tmp117 = _tmp110 - _tmp116 + 1;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp116;
  const Scalar _tmp119 = _tmp118 / _tmp117;
  const Scalar _tmp120 = -_tmp106;
  const Scalar _tmp121 = -_tmp104;
  const Scalar _tmp122 = _tmp120 + _tmp121 + _tmp58;
  const Scalar _tmp123 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp122)));
  const Scalar _tmp124 = -_tmp115 + _tmp123 + 1;
  const Scalar _tmp125 = (Scalar(1) / Scalar(2)) * _tmp115;
  const Scalar _tmp126 = _tmp10 * _tmp98;
  const Scalar _tmp127 = _tmp126 + _tmp90;
  const Scalar _tmp128 = _tmp104 + _tmp120 + _tmp49;
  const Scalar _tmp129 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp128)));
  const Scalar _tmp130 = -_tmp114 + _tmp129 + 1;
  const Scalar _tmp131 = (Scalar(1) / Scalar(2)) * _tmp114;
  const Scalar _tmp132 = _tmp131 / _tmp130;
  const Scalar _tmp133 = -_tmp103 * _tmp94 + _tmp90 * _tmp92;
  const Scalar _tmp134 = _tmp10 * _tmp133;
  const Scalar _tmp135 = _tmp134 + _tmp94;
  const Scalar _tmp136 = _tmp106 + _tmp121 + _tmp49;
  const Scalar _tmp137 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp136)));
  const Scalar _tmp138 = -_tmp113 + _tmp137 + 1;
  const Scalar _tmp139 = (Scalar(1) / Scalar(2)) * _tmp113;
  const Scalar _tmp140 = _tmp139 / _tmp138;
  const Scalar _tmp141 =
      _tmp101 * _tmp119 + _tmp124 * _tmp125 + _tmp127 * _tmp132 + _tmp135 * _tmp140;
  const Scalar _tmp142 = -_tmp36 + _tmp37;
  const Scalar _tmp143 = _tmp28 + _tmp72;
  const Scalar _tmp144 = _tmp70 / _tmp69;
  const Scalar _tmp145 = _tmp142 * _tmp79 + _tmp143 * _tmp54 + _tmp144 * _tmp56 + _tmp64 * _tmp65;
  const Scalar _tmp146 = _tmp134 - _tmp94;
  const Scalar _tmp147 = _tmp100 + _tmp93;
  const Scalar _tmp148 = _tmp125 / _tmp124;
  const Scalar _tmp149 =
      _tmp119 * _tmp146 + _tmp127 * _tmp148 + _tmp130 * _tmp131 + _tmp140 * _tmp147;
  const Scalar _tmp150 = _tmp25 - _tmp55;
  const Scalar _tmp151 = _tmp143 * _tmp66 + _tmp144 * _tmp38 + _tmp150 * _tmp79 + _tmp52 * _tmp53;
  const Scalar _tmp152 = -_tmp126 + _tmp90;
  const Scalar _tmp153 =
      _tmp101 * _tmp148 + _tmp117 * _tmp118 + _tmp132 * _tmp146 + _tmp140 * _tmp152;
  const Scalar _tmp154 =
      _tmp119 * _tmp152 + _tmp132 * _tmp147 + _tmp135 * _tmp148 + _tmp138 * _tmp139;
  const Scalar _tmp155 = _tmp142 * _tmp66 + _tmp144 * _tmp73 + _tmp150 * _tmp54 + _tmp77 * _tmp78;
  const Scalar _tmp156 =
      _tmp141 * _tmp80 - _tmp145 * _tmp149 + _tmp151 * _tmp153 - _tmp154 * _tmp155;
  const Scalar _tmp157 = -_RotHandEye[0] * _tmp6 + _RotHandEye[1] * _tmp5 + _RotHandEye[2] * _tmp7 +
                         _RotHandEye[3] * _tmp4;
  const Scalar _tmp158 =
      -_tmp141 * _tmp151 + _tmp145 * _tmp154 - _tmp149 * _tmp155 + _tmp153 * _tmp80;
  const Scalar _tmp159 = _RotHandEye[0] * _tmp7 - _RotHandEye[1] * _tmp4 + _RotHandEye[2] * _tmp6 +
                         _RotHandEye[3] * _tmp5;
  const Scalar _tmp160 =
      _tmp141 * _tmp145 + _tmp149 * _tmp80 + _tmp151 * _tmp154 + _tmp153 * _tmp155;
  const Scalar _tmp161 = _RotHandEye[0] * _tmp4 + _RotHandEye[1] * _tmp7 - _RotHandEye[2] * _tmp5 +
                         _RotHandEye[3] * _tmp6;
  const Scalar _tmp162 =
      -_tmp141 * _tmp155 + _tmp145 * _tmp153 + _tmp149 * _tmp151 - _tmp154 * _tmp80;
  const Scalar _tmp163 =
      _tmp156 * _tmp8 + _tmp157 * _tmp158 - _tmp159 * _tmp160 - _tmp161 * _tmp162;
  const Scalar _tmp164 =
      _tmp156 * _tmp159 + _tmp157 * _tmp162 + _tmp158 * _tmp161 + _tmp160 * _tmp8;
  const Scalar _tmp165 = (((_tmp164) > 0) - ((_tmp164) < 0));
  const Scalar _tmp166 = std::fabs(_tmp164);
  const Scalar _tmp167 = 1 - epsilon;
  const Scalar _tmp168 = _tmp13 * _tmp16 * _tmp9;
  const Scalar _tmp169 = std::pow(_tmp15, Scalar(-2));
  const Scalar _tmp170 = _tmp169 * _tmp9;
  const Scalar _tmp171 =
      (_tmp168 / _tmp21 + _tmp170 * _tmp22) / (_tmp169 * std::pow(_tmp22, Scalar(2)) + 1);
  const Scalar _tmp172 = 2 * _tmp171;
  const Scalar _tmp173 = -_tmp12 * _tmp172 * _tmp32 + _tmp172 * _tmp27 * _tmp39;
  const Scalar _tmp174 = _tmp10 * _tmp173;
  const Scalar _tmp175 = _tmp13 / _tmp17;
  const Scalar _tmp176 = _tmp175 * _tmp30;
  const Scalar _tmp177 = _tmp174 - _tmp176;
  const Scalar _tmp178 = 2 * _tmp14;
  const Scalar _tmp179 = _tmp171 * _tmp178 * _tmp31;
  const Scalar _tmp180 = _tmp12 * _tmp179 + _tmp172 * _tmp29;
  const Scalar _tmp181 = _tmp10 * _tmp180;
  const Scalar _tmp182 = _tmp175 * _tmp40;
  const Scalar _tmp183 = _tmp181 - _tmp182;
  const Scalar _tmp184 = _tmp175 * _tmp41;
  const Scalar _tmp185 = _tmp10 * (_tmp14 * _tmp180 - _tmp173 * _tmp25);
  const Scalar _tmp186 = _tmp184 - _tmp185;
  const Scalar _tmp187 = (Scalar(1) / Scalar(8)) * _tmp62 * (_tmp183 + _tmp186) *
                         ((((_tmp67) > 0) - ((_tmp67) < 0)) + 1) / _tmp68;
  const Scalar _tmp188 = -_tmp172 * _tmp26 - _tmp179 * _tmp27;
  const Scalar _tmp189 = _tmp10 * (-_tmp14 * _tmp188 + _tmp173 * _tmp28);
  const Scalar _tmp190 = _tmp175 * _tmp35;
  const Scalar _tmp191 = _tmp10 * _tmp188 - _tmp175 * _tmp34;
  const Scalar _tmp192 = _tmp189 - _tmp190 + _tmp191;
  const Scalar _tmp193 = -_tmp181 + _tmp182;
  const Scalar _tmp194 = (Scalar(1) / Scalar(8)) * _tmp63 * (_tmp186 + _tmp193) *
                         ((((_tmp59) > 0) - ((_tmp59) < 0)) + 1) / _tmp60;
  const Scalar _tmp195 = _tmp194 / std::pow(_tmp64, Scalar(2));
  const Scalar _tmp196 = _tmp10 * (-_tmp180 * _tmp28 + _tmp188 * _tmp25) - _tmp175 * _tmp71;
  const Scalar _tmp197 = -_tmp184 + _tmp185;
  const Scalar _tmp198 = (Scalar(1) / Scalar(8)) * _tmp47 * (_tmp193 + _tmp197) *
                         ((((_tmp50) > 0) - ((_tmp50) < 0)) + 1) / _tmp51;
  const Scalar _tmp199 = _tmp198 / std::pow(_tmp52, Scalar(2));
  const Scalar _tmp200 = (Scalar(1) / Scalar(8)) * _tmp76 * (_tmp183 + _tmp197) *
                         ((((_tmp74) > 0) - ((_tmp74) < 0)) + 1) / _tmp75;
  const Scalar _tmp201 = _tmp200 / std::pow(_tmp77, Scalar(2));
  const Scalar _tmp202 = _tmp177 * _tmp66 + _tmp187 + _tmp192 * _tmp54 - _tmp195 * _tmp56 +
                         _tmp196 * _tmp79 - _tmp199 * _tmp38 - _tmp201 * _tmp73;
  const Scalar _tmp203 = -_tmp189 + _tmp190 + _tmp191;
  const Scalar _tmp204 = -_tmp174 + _tmp176;
  const Scalar _tmp205 = _tmp187 / std::pow(_tmp69, Scalar(2));
  const Scalar _tmp206 = -_tmp142 * _tmp195 + _tmp144 * _tmp196 - _tmp150 * _tmp199 + _tmp200 +
                         _tmp203 * _tmp66 + _tmp204 * _tmp54 - _tmp205 * _tmp73;
  const Scalar _tmp207 = -_tmp142 * _tmp201 - _tmp143 * _tmp199 + _tmp144 * _tmp177 + _tmp194 +
                         _tmp196 * _tmp54 + _tmp203 * _tmp79 - _tmp205 * _tmp56;
  const Scalar _tmp208 =
      (_tmp168 / _tmp84 + _tmp170 * _tmp85) / (_tmp169 * std::pow(_tmp85, Scalar(2)) + 1);
  const Scalar _tmp209 = _tmp208 * _tmp96;
  const Scalar _tmp210 = 2 * _tmp208;
  const Scalar _tmp211 = _tmp102 * _tmp210 * _tmp82 - 2 * _tmp209 * _tmp91;
  const Scalar _tmp212 = _tmp178 * _tmp89;
  const Scalar _tmp213 = _tmp209 * _tmp212 + _tmp210 * _tmp95;
  const Scalar _tmp214 = _tmp10 * (_tmp14 * _tmp213 - _tmp211 * _tmp90);
  const Scalar _tmp215 = _tmp105 * _tmp175;
  const Scalar _tmp216 = -_tmp214 + _tmp215;
  const Scalar _tmp217 = _tmp10 * _tmp213;
  const Scalar _tmp218 = _tmp103 * _tmp175;
  const Scalar _tmp219 = -_tmp217 + _tmp218;
  const Scalar _tmp220 = (Scalar(1) / Scalar(8)) * _tmp115 * (_tmp216 + _tmp219) *
                         ((((_tmp122) > 0) - ((_tmp122) < 0)) + 1) / _tmp123;
  const Scalar _tmp221 = _tmp220 / std::pow(_tmp124, Scalar(2));
  const Scalar _tmp222 = _tmp10 * _tmp211;
  const Scalar _tmp223 = _tmp175 * _tmp98;
  const Scalar _tmp224 = -_tmp222 + _tmp223;
  const Scalar _tmp225 = _tmp217 - _tmp218;
  const Scalar _tmp226 = (Scalar(1) / Scalar(8)) * _tmp114 * (_tmp216 + _tmp225) *
                         ((((_tmp128) > 0) - ((_tmp128) < 0)) + 1) / _tmp129;
  const Scalar _tmp227 = _tmp226 / std::pow(_tmp130, Scalar(2));
  const Scalar _tmp228 = _tmp175 * _tmp99;
  const Scalar _tmp229 = -_tmp208 * _tmp212 * _tmp82 - _tmp210 * _tmp97;
  const Scalar _tmp230 = _tmp10 * (-_tmp14 * _tmp229 + _tmp211 * _tmp94);
  const Scalar _tmp231 = _tmp10 * _tmp229 - _tmp175 * _tmp92;
  const Scalar _tmp232 = _tmp228 - _tmp230 + _tmp231;
  const Scalar _tmp233 = _tmp214 - _tmp215;
  const Scalar _tmp234 = (Scalar(1) / Scalar(8)) * _tmp116 * (_tmp225 + _tmp233) *
                         ((((_tmp109) > 0) - ((_tmp109) < 0)) + 1) / _tmp110;
  const Scalar _tmp235 = _tmp10 * (-_tmp213 * _tmp94 + _tmp229 * _tmp90) - _tmp133 * _tmp175;
  const Scalar _tmp236 = (Scalar(1) / Scalar(8)) * _tmp113 * (_tmp219 + _tmp233) *
                         ((((_tmp136) > 0) - ((_tmp136) < 0)) + 1) / _tmp137;
  const Scalar _tmp237 = _tmp236 / std::pow(_tmp138, Scalar(2));
  const Scalar _tmp238 = -_tmp101 * _tmp221 + _tmp132 * _tmp235 + _tmp140 * _tmp224 -
                         _tmp146 * _tmp227 + _tmp148 * _tmp232 - _tmp152 * _tmp237 + _tmp234;
  const Scalar _tmp239 = _tmp234 / std::pow(_tmp117, Scalar(2));
  const Scalar _tmp240 = _tmp222 - _tmp223;
  const Scalar _tmp241 = -_tmp101 * _tmp239 + _tmp119 * _tmp232 - _tmp127 * _tmp227 +
                         _tmp132 * _tmp240 - _tmp135 * _tmp237 + _tmp140 * _tmp235 + _tmp220;
  const Scalar _tmp242 = -_tmp228 + _tmp230 + _tmp231;
  const Scalar _tmp243 = _tmp119 * _tmp224 + _tmp132 * _tmp242 - _tmp135 * _tmp221 -
                         _tmp147 * _tmp227 + _tmp148 * _tmp235 - _tmp152 * _tmp239 + _tmp236;
  const Scalar _tmp244 = -_tmp143 * _tmp195 + _tmp144 * _tmp192 - _tmp150 * _tmp201 +
                         _tmp196 * _tmp66 + _tmp198 + _tmp204 * _tmp79 - _tmp205 * _tmp38;
  const Scalar _tmp245 = _tmp119 * _tmp235 - _tmp127 * _tmp221 + _tmp140 * _tmp242 -
                         _tmp146 * _tmp239 - _tmp147 * _tmp237 + _tmp148 * _tmp240 + _tmp226;
  const Scalar _tmp246 = -_tmp141 * _tmp206 + _tmp145 * _tmp238 + _tmp149 * _tmp244 +
                         _tmp151 * _tmp245 + _tmp153 * _tmp207 - _tmp154 * _tmp202 -
                         _tmp155 * _tmp241 - _tmp243 * _tmp80;
  const Scalar _tmp247 = _tmp141 * _tmp207 + _tmp145 * _tmp241 + _tmp149 * _tmp202 +
                         _tmp151 * _tmp243 + _tmp153 * _tmp206 + _tmp154 * _tmp244 +
                         _tmp155 * _tmp238 + _tmp245 * _tmp80;
  const Scalar _tmp248 = _tmp141 * _tmp202 - _tmp145 * _tmp245 - _tmp149 * _tmp207 +
                         _tmp151 * _tmp238 + _tmp153 * _tmp244 - _tmp154 * _tmp206 -
                         _tmp155 * _tmp243 + _tmp241 * _tmp80;
  const Scalar _tmp249 = -_tmp141 * _tmp244 + _tmp145 * _tmp243 - _tmp149 * _tmp206 -
                         _tmp151 * _tmp241 + _tmp153 * _tmp202 + _tmp154 * _tmp207 -
                         _tmp155 * _tmp245 + _tmp238 * _tmp80;
  const Scalar _tmp250 =
      _tmp165 * ((((-_tmp166 + _tmp167) > 0) - ((-_tmp166 + _tmp167) < 0)) + 1) *
      (_tmp157 * _tmp246 + _tmp159 * _tmp248 + _tmp161 * _tmp249 + _tmp247 * _tmp8);
  const Scalar _tmp251 = std::min<Scalar>(_tmp166, _tmp167);
  const Scalar _tmp252 = 1 - std::pow(_tmp251, Scalar(2));
  const Scalar _tmp253 = 2 * std::min<Scalar>(0, _tmp165) + 1;
  const Scalar _tmp254 = _tmp253 * std::acos(_tmp251);
  const Scalar _tmp255 = _tmp251 * _tmp254 / (_tmp252 * std::sqrt(_tmp252));
  const Scalar _tmp256 = _tmp250 * _tmp255;
  const Scalar _tmp257 = 2 * _tmp254 / std::sqrt(_tmp252);
  const Scalar _tmp258 = _tmp253 / _tmp252;
  const Scalar _tmp259 = _tmp250 * _tmp258;
  const Scalar _tmp260 =
      -_tmp156 * _tmp157 + _tmp158 * _tmp8 + _tmp159 * _tmp162 - _tmp160 * _tmp161;
  const Scalar _tmp261 =
      _tmp250 * (_tmp156 * _tmp161 - _tmp157 * _tmp160 - _tmp158 * _tmp159 + _tmp162 * _tmp8);

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) =
      _tmp163 * _tmp256 - _tmp163 * _tmp259 +
      _tmp257 * (_tmp157 * _tmp249 - _tmp159 * _tmp247 - _tmp161 * _tmp246 + _tmp248 * _tmp8);
  _res(1, 0) =
      _tmp256 * _tmp260 +
      _tmp257 * (-_tmp157 * _tmp248 + _tmp159 * _tmp246 - _tmp161 * _tmp247 + _tmp249 * _tmp8) -
      _tmp259 * _tmp260;
  _res(2, 0) =
      _tmp255 * _tmp261 +
      _tmp257 * (-_tmp157 * _tmp247 - _tmp159 * _tmp249 + _tmp161 * _tmp248 + _tmp246 * _tmp8) -
      _tmp258 * _tmp261;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
