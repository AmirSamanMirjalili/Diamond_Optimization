// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: error_model_func_wrt_beta
 *
 * Args:
 *     theta11: Scalar
 *     theta12: Scalar
 *     theta21: Scalar
 *     theta22: Scalar
 *     offset1: Scalar
 *     offset2: Scalar
 *     alpha: Scalar
 *     beta: Scalar
 *     RotGT1: Rot3
 *     RotGT2: Rot3
 *     RotHandEye: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> ErrorModelFuncWrtBeta(
    const Scalar theta11, const Scalar theta12, const Scalar theta21, const Scalar theta22,
    const Scalar offset1, const Scalar offset2, const Scalar alpha, const Scalar beta,
    const sym::Rot3<Scalar>& RotGT1, const sym::Rot3<Scalar>& RotGT2,
    const sym::Rot3<Scalar>& RotHandEye, const Scalar epsilon) {
  // Total ops: 889

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT1 = RotGT1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT2 = RotGT2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotHandEye = RotHandEye.Data();

  // Intermediate terms (269)
  const Scalar _tmp0 = _RotGT1[0] * _RotGT2[0] + _RotGT1[1] * _RotGT2[1] + _RotGT1[2] * _RotGT2[2] +
                       _RotGT1[3] * _RotGT2[3];
  const Scalar _tmp1 = -_RotGT1[0] * _RotGT2[3] - _RotGT1[1] * _RotGT2[2] +
                       _RotGT1[2] * _RotGT2[1] + _RotGT1[3] * _RotGT2[0];
  const Scalar _tmp2 = _RotGT1[0] * _RotGT2[2] - _RotGT1[1] * _RotGT2[3] - _RotGT1[2] * _RotGT2[0] +
                       _RotGT1[3] * _RotGT2[1];
  const Scalar _tmp3 = -_RotGT1[0] * _RotGT2[1] + _RotGT1[1] * _RotGT2[0] -
                       _RotGT1[2] * _RotGT2[3] + _RotGT1[3] * _RotGT2[2];
  const Scalar _tmp4 = _RotHandEye[0] * _tmp1 + _RotHandEye[1] * _tmp2 + _RotHandEye[2] * _tmp3 +
                       _RotHandEye[3] * _tmp0;
  const Scalar _tmp5 = -_RotHandEye[0] * _tmp2 + _RotHandEye[1] * _tmp1 - _RotHandEye[2] * _tmp0 +
                       _RotHandEye[3] * _tmp3;
  const Scalar _tmp6 = -_RotHandEye[0] * _tmp0 - _RotHandEye[1] * _tmp3 + _RotHandEye[2] * _tmp2 +
                       _RotHandEye[3] * _tmp1;
  const Scalar _tmp7 = _RotHandEye[0] * _tmp3 - _RotHandEye[1] * _tmp0 - _RotHandEye[2] * _tmp1 +
                       _RotHandEye[3] * _tmp2;
  const Scalar _tmp8 = _RotHandEye[0] * _tmp5 + _RotHandEye[1] * _tmp4 - _RotHandEye[2] * _tmp6 +
                       _RotHandEye[3] * _tmp7;
  const Scalar _tmp9 = std::sin(alpha);
  const Scalar _tmp10 = offset1 + theta11;
  const Scalar _tmp11 = _tmp9 * std::sin(_tmp10);
  const Scalar _tmp12 = std::sin(beta);
  const Scalar _tmp13 = Scalar(1.0) / (_tmp12);
  const Scalar _tmp14 = offset2 + theta12;
  const Scalar _tmp15 = (Scalar(1) / Scalar(2)) * _tmp10 + (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp16 = std::cos(_tmp15);
  const Scalar _tmp17 = std::cos(beta);
  const Scalar _tmp18 = std::cos(alpha);
  const Scalar _tmp19 = _tmp17 + _tmp18;
  const Scalar _tmp20 = Scalar(1.0) / (_tmp19);
  const Scalar _tmp21 = std::pow(_tmp12, Scalar(2));
  const Scalar _tmp22 = std::pow(_tmp9, Scalar(2));
  const Scalar _tmp23 = (Scalar(1) / Scalar(2)) * _tmp10 - Scalar(1) / Scalar(2) * _tmp14;
  const Scalar _tmp24 =
      std::sqrt(Scalar(_tmp21 - _tmp22 * std::pow(Scalar(std::sin(_tmp23)), Scalar(2))));
  const Scalar _tmp25 = _tmp24 + _tmp9 * std::cos(_tmp23);
  const Scalar _tmp26 = 2 * std::atan(_tmp20 * _tmp25);
  const Scalar _tmp27 = std::sin(_tmp26);
  const Scalar _tmp28 = _tmp11 * _tmp27;
  const Scalar _tmp29 = std::sin(_tmp15);
  const Scalar _tmp30 = _tmp9 * std::cos(_tmp10);
  const Scalar _tmp31 = _tmp27 * _tmp30;
  const Scalar _tmp32 = -_tmp16 * _tmp28 + _tmp29 * _tmp31;
  const Scalar _tmp33 = _tmp13 * _tmp32;
  const Scalar _tmp34 = _tmp11 + _tmp33;
  const Scalar _tmp35 = std::cos(_tmp26);
  const Scalar _tmp36 = _tmp30 * _tmp35;
  const Scalar _tmp37 = _tmp18 * _tmp27;
  const Scalar _tmp38 = _tmp16 * _tmp37 - _tmp36;
  const Scalar _tmp39 = -_tmp11 * _tmp32 + _tmp18 * _tmp38;
  const Scalar _tmp40 = _tmp13 * _tmp39;
  const Scalar _tmp41 = _tmp13 * _tmp38;
  const Scalar _tmp42 = _tmp18 + _tmp40;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 =
      -std::max<Scalar>(_tmp18, std::max<Scalar>(_tmp40, std::max<Scalar>(_tmp41, _tmp43)));
  const Scalar _tmp45 =
      1 - std::max<Scalar>(0, -(((_tmp40 + _tmp44) > 0) - ((_tmp40 + _tmp44) < 0)));
  const Scalar _tmp46 = _tmp41 + _tmp44;
  const Scalar _tmp47 = std::min<Scalar>(
      1 - std::max<Scalar>(0, _tmp45), 1 - std::max<Scalar>(0, -(((_tmp46) > 0) - ((_tmp46) < 0))));
  const Scalar _tmp48 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp45, _tmp47)),
      1 - std::max<Scalar>(0, -(((_tmp18 + _tmp44) > 0) - ((_tmp18 + _tmp44) < 0))));
  const Scalar _tmp49 = -_tmp40;
  const Scalar _tmp50 = 1 - _tmp41;
  const Scalar _tmp51 = _tmp18 + _tmp49 + _tmp50;
  const Scalar _tmp52 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp51)));
  const Scalar _tmp53 = -_tmp48 + _tmp52 + 1;
  const Scalar _tmp54 = (Scalar(1) / Scalar(2)) * _tmp48;
  const Scalar _tmp55 = _tmp54 / _tmp53;
  const Scalar _tmp56 = _tmp11 * _tmp35;
  const Scalar _tmp57 = -_tmp29 * _tmp37 + _tmp56;
  const Scalar _tmp58 = -_tmp18 * _tmp57 + _tmp30 * _tmp32;
  const Scalar _tmp59 = _tmp13 * _tmp58;
  const Scalar _tmp60 = _tmp13 * _tmp57;
  const Scalar _tmp61 = _tmp59 + _tmp60;
  const Scalar _tmp62 = -_tmp18;
  const Scalar _tmp63 = _tmp40 + _tmp50 + _tmp62;
  const Scalar _tmp64 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp63)));
  const Scalar _tmp65 = -_tmp45 + _tmp64 + 1;
  const Scalar _tmp66 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp67 = _tmp66 / _tmp65;
  const Scalar _tmp68 = _tmp11 * _tmp57 - _tmp30 * _tmp38;
  const Scalar _tmp69 = _tmp13 * _tmp68;
  const Scalar _tmp70 = -_tmp30 + _tmp69;
  const Scalar _tmp71 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp45, std::max<Scalar>(_tmp47, _tmp48))),
      1 - std::max<Scalar>(0, -(((_tmp42 + _tmp46) > 0) - ((_tmp42 + _tmp46) < 0))));
  const Scalar _tmp72 = _tmp43 + 1;
  const Scalar _tmp73 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp72)));
  const Scalar _tmp74 = -_tmp71 + _tmp73 + 1;
  const Scalar _tmp75 = (Scalar(1) / Scalar(2)) * _tmp71;
  const Scalar _tmp76 = _tmp75 / _tmp74;
  const Scalar _tmp77 = _tmp62 + 1;
  const Scalar _tmp78 = _tmp41 + _tmp49 + _tmp77;
  const Scalar _tmp79 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp78)));
  const Scalar _tmp80 = -_tmp47 + _tmp79 + 1;
  const Scalar _tmp81 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp82 = _tmp34 * _tmp55 + _tmp61 * _tmp67 + _tmp70 * _tmp76 + _tmp80 * _tmp81;
  const Scalar _tmp83 = offset2 + theta22;
  const Scalar _tmp84 = offset1 + theta21;
  const Scalar _tmp85 = -Scalar(1) / Scalar(2) * _tmp83 + (Scalar(1) / Scalar(2)) * _tmp84;
  const Scalar _tmp86 =
      std::sqrt(Scalar(_tmp21 - _tmp22 * std::pow(Scalar(std::sin(_tmp85)), Scalar(2))));
  const Scalar _tmp87 = _tmp86 + _tmp9 * std::cos(_tmp85);
  const Scalar _tmp88 = 2 * std::atan(_tmp20 * _tmp87);
  const Scalar _tmp89 = std::cos(_tmp88);
  const Scalar _tmp90 = _tmp9 * std::cos(_tmp84);
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = (Scalar(1) / Scalar(2)) * _tmp83 + (Scalar(1) / Scalar(2)) * _tmp84;
  const Scalar _tmp93 = std::cos(_tmp92);
  const Scalar _tmp94 = std::sin(_tmp88);
  const Scalar _tmp95 = _tmp18 * _tmp94;
  const Scalar _tmp96 = -_tmp91 + _tmp93 * _tmp95;
  const Scalar _tmp97 = _tmp9 * std::sin(_tmp84);
  const Scalar _tmp98 = _tmp89 * _tmp97;
  const Scalar _tmp99 = std::sin(_tmp92);
  const Scalar _tmp100 = -_tmp95 * _tmp99 + _tmp98;
  const Scalar _tmp101 = _tmp100 * _tmp97 - _tmp90 * _tmp96;
  const Scalar _tmp102 = _tmp17 / _tmp21;
  const Scalar _tmp103 = std::pow(_tmp19, Scalar(-2));
  const Scalar _tmp104 = _tmp12 * _tmp17 * _tmp20;
  const Scalar _tmp105 = _tmp103 * _tmp12;
  const Scalar _tmp106 =
      (_tmp104 / _tmp86 + _tmp105 * _tmp87) / (_tmp103 * std::pow(_tmp87, Scalar(2)) + 1);
  const Scalar _tmp107 = _tmp106 * _tmp93;
  const Scalar _tmp108 = 2 * _tmp18;
  const Scalar _tmp109 = _tmp108 * _tmp89;
  const Scalar _tmp110 = _tmp90 * _tmp94;
  const Scalar _tmp111 = 2 * _tmp106;
  const Scalar _tmp112 = _tmp107 * _tmp109 + _tmp110 * _tmp111;
  const Scalar _tmp113 = _tmp106 * _tmp99;
  const Scalar _tmp114 = _tmp94 * _tmp97;
  const Scalar _tmp115 = -_tmp109 * _tmp113 - _tmp111 * _tmp114;
  const Scalar _tmp116 = -_tmp101 * _tmp102 + _tmp13 * (-_tmp112 * _tmp90 + _tmp115 * _tmp97);
  const Scalar _tmp117 = _tmp110 * _tmp99 - _tmp114 * _tmp93;
  const Scalar _tmp118 = -_tmp117 * _tmp97 + _tmp18 * _tmp96;
  const Scalar _tmp119 = _tmp118 * _tmp13;
  const Scalar _tmp120 = -_tmp119;
  const Scalar _tmp121 = _tmp13 * _tmp96;
  const Scalar _tmp122 = -_tmp121;
  const Scalar _tmp123 = _tmp120 + _tmp122 + _tmp18 + 1;
  const Scalar _tmp124 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp123)));
  const Scalar _tmp125 = _tmp119 + _tmp18;
  const Scalar _tmp126 = _tmp121 + _tmp125;
  const Scalar _tmp127 =
      -std::max<Scalar>(_tmp119, std::max<Scalar>(_tmp121, std::max<Scalar>(_tmp126, _tmp18)));
  const Scalar _tmp128 =
      1 - std::max<Scalar>(0, -(((_tmp119 + _tmp127) > 0) - ((_tmp119 + _tmp127) < 0)));
  const Scalar _tmp129 = _tmp121 + _tmp127;
  const Scalar _tmp130 =
      std::min<Scalar>(1 - std::max<Scalar>(0, _tmp128),
                       1 - std::max<Scalar>(0, -(((_tmp129) > 0) - ((_tmp129) < 0))));
  const Scalar _tmp131 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp128, _tmp130)),
      1 - std::max<Scalar>(0, -(((_tmp127 + _tmp18) > 0) - ((_tmp127 + _tmp18) < 0))));
  const Scalar _tmp132 = _tmp124 - _tmp131 + 1;
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp131;
  const Scalar _tmp134 = _tmp133 / _tmp132;
  const Scalar _tmp135 = _tmp119 + _tmp122 + _tmp77;
  const Scalar _tmp136 = _tmp112 * _tmp13;
  const Scalar _tmp137 = _tmp102 * _tmp96;
  const Scalar _tmp138 = -_tmp136 + _tmp137;
  const Scalar _tmp139 = -2 * _tmp107 * _tmp98 + 2 * _tmp113 * _tmp91;
  const Scalar _tmp140 = _tmp13 * (_tmp112 * _tmp18 - _tmp139 * _tmp97);
  const Scalar _tmp141 = _tmp102 * _tmp118;
  const Scalar _tmp142 = _tmp140 - _tmp141;
  const Scalar _tmp143 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp135)));
  const Scalar _tmp144 = (Scalar(1) / Scalar(8)) * _tmp128 * (_tmp138 + _tmp142) *
                         ((((_tmp135) > 0) - ((_tmp135) < 0)) + 1) / _tmp143;
  const Scalar _tmp145 = _tmp117 * _tmp13;
  const Scalar _tmp146 = -_tmp145 + _tmp97;
  const Scalar _tmp147 = _tmp126 + 1;
  const Scalar _tmp148 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp147)));
  const Scalar _tmp149 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp128, std::max<Scalar>(_tmp130, _tmp131))),
      1 - std::max<Scalar>(0, -(((_tmp125 + _tmp129) > 0) - ((_tmp125 + _tmp129) < 0))));
  const Scalar _tmp150 = _tmp148 - _tmp149 + 1;
  const Scalar _tmp151 = _tmp136 - _tmp137;
  const Scalar _tmp152 = (Scalar(1) / Scalar(8)) * _tmp149 * (_tmp142 + _tmp151) *
                         ((((_tmp147) > 0) - ((_tmp147) < 0)) + 1) / _tmp148;
  const Scalar _tmp153 = _tmp152 / std::pow(_tmp150, Scalar(2));
  const Scalar _tmp154 = _tmp101 * _tmp13;
  const Scalar _tmp155 = _tmp154 + _tmp90;
  const Scalar _tmp156 = -_tmp140 + _tmp141;
  const Scalar _tmp157 = (Scalar(1) / Scalar(8)) * _tmp131 * (_tmp138 + _tmp156) *
                         ((((_tmp123) > 0) - ((_tmp123) < 0)) + 1) / _tmp124;
  const Scalar _tmp158 = _tmp157 / std::pow(_tmp132, Scalar(2));
  const Scalar _tmp159 = -_tmp100 * _tmp18 + _tmp117 * _tmp90;
  const Scalar _tmp160 = _tmp13 * _tmp159;
  const Scalar _tmp161 = _tmp100 * _tmp13;
  const Scalar _tmp162 = _tmp160 + _tmp161;
  const Scalar _tmp163 = _tmp120 + _tmp121 + _tmp77;
  const Scalar _tmp164 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp163)));
  const Scalar _tmp165 = -_tmp130 + _tmp164 + 1;
  const Scalar _tmp166 = (Scalar(1) / Scalar(8)) * _tmp130 * (_tmp151 + _tmp156) *
                         ((((_tmp163) > 0) - ((_tmp163) < 0)) + 1) / _tmp164;
  const Scalar _tmp167 = _tmp166 / std::pow(_tmp165, Scalar(2));
  const Scalar _tmp168 = _tmp13 * _tmp139;
  const Scalar _tmp169 = _tmp102 * _tmp117;
  const Scalar _tmp170 = -_tmp168 + _tmp169;
  const Scalar _tmp171 = (Scalar(1) / Scalar(2)) * _tmp149;
  const Scalar _tmp172 = _tmp171 / _tmp150;
  const Scalar _tmp173 = _tmp102 * _tmp159;
  const Scalar _tmp174 = _tmp13 * (-_tmp115 * _tmp18 + _tmp139 * _tmp90);
  const Scalar _tmp175 = -_tmp100 * _tmp102 + _tmp115 * _tmp13;
  const Scalar _tmp176 = -_tmp173 + _tmp174 + _tmp175;
  const Scalar _tmp177 = (Scalar(1) / Scalar(2)) * _tmp130;
  const Scalar _tmp178 = _tmp177 / _tmp165;
  const Scalar _tmp179 = _tmp116 * _tmp134 + _tmp144 - _tmp146 * _tmp153 - _tmp155 * _tmp158 -
                         _tmp162 * _tmp167 + _tmp170 * _tmp172 + _tmp176 * _tmp178;
  const Scalar _tmp180 = -_tmp59 + _tmp60;
  const Scalar _tmp181 = _tmp102 * _tmp38;
  const Scalar _tmp182 =
      (_tmp104 / _tmp24 + _tmp105 * _tmp25) / (_tmp103 * std::pow(_tmp25, Scalar(2)) + 1);
  const Scalar _tmp183 = _tmp108 * _tmp35;
  const Scalar _tmp184 = 2 * _tmp182;
  const Scalar _tmp185 = _tmp16 * _tmp182 * _tmp183 + _tmp184 * _tmp31;
  const Scalar _tmp186 = _tmp13 * _tmp185;
  const Scalar _tmp187 = _tmp181 - _tmp186;
  const Scalar _tmp188 = _tmp182 * _tmp29;
  const Scalar _tmp189 = -_tmp16 * _tmp184 * _tmp56 + 2 * _tmp188 * _tmp36;
  const Scalar _tmp190 = _tmp13 * (-_tmp11 * _tmp189 + _tmp18 * _tmp185);
  const Scalar _tmp191 = _tmp102 * _tmp39;
  const Scalar _tmp192 = -_tmp190 + _tmp191;
  const Scalar _tmp193 = (Scalar(1) / Scalar(8)) * _tmp48 * (_tmp187 + _tmp192) *
                         ((((_tmp51) > 0) - ((_tmp51) < 0)) + 1) / _tmp52;
  const Scalar _tmp194 = _tmp193 / std::pow(_tmp53, Scalar(2));
  const Scalar _tmp195 = _tmp190 - _tmp191;
  const Scalar _tmp196 = -_tmp181 + _tmp186;
  const Scalar _tmp197 = (Scalar(1) / Scalar(8)) * _tmp71 * (_tmp195 + _tmp196) *
                         ((((_tmp72) > 0) - ((_tmp72) < 0)) + 1) / _tmp73;
  const Scalar _tmp198 = -_tmp183 * _tmp188 - _tmp184 * _tmp28;
  const Scalar _tmp199 = -_tmp102 * _tmp68 + _tmp13 * (_tmp11 * _tmp198 - _tmp185 * _tmp30);
  const Scalar _tmp200 = _tmp81 / _tmp80;
  const Scalar _tmp201 = (Scalar(1) / Scalar(8)) * _tmp47 * (_tmp192 + _tmp196) *
                         ((((_tmp78) > 0) - ((_tmp78) < 0)) + 1) / _tmp79;
  const Scalar _tmp202 = _tmp201 / std::pow(_tmp80, Scalar(2));
  const Scalar _tmp203 = _tmp13 * _tmp189;
  const Scalar _tmp204 = _tmp102 * _tmp32;
  const Scalar _tmp205 = -_tmp203 + _tmp204;
  const Scalar _tmp206 = _tmp11 - _tmp33;
  const Scalar _tmp207 = (Scalar(1) / Scalar(8)) * _tmp45 * (_tmp187 + _tmp195) *
                         ((((_tmp63) > 0) - ((_tmp63) < 0)) + 1) / _tmp64;
  const Scalar _tmp208 = _tmp207 / std::pow(_tmp65, Scalar(2));
  const Scalar _tmp209 = _tmp13 * (-_tmp18 * _tmp198 + _tmp189 * _tmp30);
  const Scalar _tmp210 = _tmp102 * _tmp58;
  const Scalar _tmp211 = -_tmp102 * _tmp57 + _tmp13 * _tmp198;
  const Scalar _tmp212 = -_tmp209 + _tmp210 + _tmp211;
  const Scalar _tmp213 = -_tmp180 * _tmp194 + _tmp197 + _tmp199 * _tmp200 - _tmp202 * _tmp70 +
                         _tmp205 * _tmp67 - _tmp206 * _tmp208 + _tmp212 * _tmp55;
  const Scalar _tmp214 = -_tmp128 + _tmp143 + 1;
  const Scalar _tmp215 = (Scalar(1) / Scalar(2)) * _tmp128;
  const Scalar _tmp216 = _tmp215 / _tmp214;
  const Scalar _tmp217 = -_tmp160 + _tmp161;
  const Scalar _tmp218 = _tmp145 + _tmp97;
  const Scalar _tmp219 =
      _tmp132 * _tmp133 + _tmp155 * _tmp216 + _tmp172 * _tmp217 + _tmp178 * _tmp218;
  const Scalar _tmp220 = _tmp180 * _tmp55 + _tmp200 * _tmp70 + _tmp206 * _tmp67 + _tmp74 * _tmp75;
  const Scalar _tmp221 = _tmp173 - _tmp174 + _tmp175;
  const Scalar _tmp222 = _tmp144 / std::pow(_tmp214, Scalar(2));
  const Scalar _tmp223 = _tmp168 - _tmp169;
  const Scalar _tmp224 = _tmp116 * _tmp216 - _tmp153 * _tmp217 - _tmp155 * _tmp222 + _tmp157 -
                         _tmp167 * _tmp218 + _tmp172 * _tmp221 + _tmp178 * _tmp223;
  const Scalar _tmp225 = _tmp154 - _tmp90;
  const Scalar _tmp226 = _tmp116 * _tmp178 + _tmp134 * _tmp221 - _tmp146 * _tmp222 + _tmp152 -
                         _tmp158 * _tmp217 - _tmp167 * _tmp225 + _tmp170 * _tmp216;
  const Scalar _tmp227 = _tmp30 + _tmp69;
  const Scalar _tmp228 = _tmp180 * _tmp76 + _tmp200 * _tmp34 + _tmp227 * _tmp67 + _tmp53 * _tmp54;
  const Scalar _tmp229 =
      _tmp134 * _tmp217 + _tmp146 * _tmp216 + _tmp150 * _tmp171 + _tmp178 * _tmp225;
  const Scalar _tmp230 = _tmp197 / std::pow(_tmp74, Scalar(2));
  const Scalar _tmp231 = _tmp203 - _tmp204;
  const Scalar _tmp232 = -_tmp180 * _tmp230 + _tmp193 + _tmp199 * _tmp67 + _tmp200 * _tmp231 -
                         _tmp202 * _tmp34 - _tmp208 * _tmp227 + _tmp212 * _tmp76;
  const Scalar _tmp233 = _tmp200 * _tmp61 + _tmp206 * _tmp76 + _tmp227 * _tmp55 + _tmp65 * _tmp66;
  const Scalar _tmp234 = _tmp116 * _tmp172 + _tmp134 * _tmp223 - _tmp153 * _tmp225 -
                         _tmp158 * _tmp218 - _tmp162 * _tmp222 + _tmp166 + _tmp176 * _tmp216;
  const Scalar _tmp235 =
      _tmp134 * _tmp155 + _tmp146 * _tmp172 + _tmp162 * _tmp178 + _tmp214 * _tmp215;
  const Scalar _tmp236 = _tmp209 - _tmp210 + _tmp211;
  const Scalar _tmp237 = -_tmp194 * _tmp34 + _tmp199 * _tmp76 + _tmp201 - _tmp208 * _tmp61 -
                         _tmp230 * _tmp70 + _tmp231 * _tmp55 + _tmp236 * _tmp67;
  const Scalar _tmp238 =
      _tmp134 * _tmp218 + _tmp162 * _tmp216 + _tmp165 * _tmp177 + _tmp172 * _tmp225;
  const Scalar _tmp239 = -_tmp194 * _tmp227 + _tmp199 * _tmp55 + _tmp200 * _tmp236 -
                         _tmp202 * _tmp61 + _tmp205 * _tmp76 - _tmp206 * _tmp230 + _tmp207;
  const Scalar _tmp240 = _tmp179 * _tmp82 + _tmp213 * _tmp219 + _tmp220 * _tmp224 -
                         _tmp226 * _tmp228 - _tmp229 * _tmp232 - _tmp233 * _tmp234 +
                         _tmp235 * _tmp237 - _tmp238 * _tmp239;
  const Scalar _tmp241 = _RotHandEye[0] * _tmp4 - _RotHandEye[1] * _tmp5 + _RotHandEye[2] * _tmp7 +
                         _RotHandEye[3] * _tmp6;
  const Scalar _tmp242 = _tmp179 * _tmp233 + _tmp213 * _tmp229 + _tmp219 * _tmp232 +
                         _tmp220 * _tmp226 + _tmp224 * _tmp228 + _tmp234 * _tmp82 +
                         _tmp235 * _tmp239 + _tmp237 * _tmp238;
  const Scalar _tmp243 = -_RotHandEye[0] * _tmp7 + _RotHandEye[1] * _tmp6 + _RotHandEye[2] * _tmp4 +
                         _RotHandEye[3] * _tmp5;
  const Scalar _tmp244 = -_tmp179 * _tmp228 + _tmp213 * _tmp238 + _tmp219 * _tmp239 +
                         _tmp220 * _tmp234 + _tmp224 * _tmp233 - _tmp226 * _tmp82 -
                         _tmp229 * _tmp237 - _tmp232 * _tmp235;
  const Scalar _tmp245 = -_RotHandEye[0] * _tmp6 - _RotHandEye[1] * _tmp7 - _RotHandEye[2] * _tmp5 +
                         _RotHandEye[3] * _tmp4;
  const Scalar _tmp246 = _tmp179 * _tmp220 + _tmp213 * _tmp235 - _tmp219 * _tmp237 -
                         _tmp224 * _tmp82 - _tmp226 * _tmp233 + _tmp228 * _tmp234 -
                         _tmp229 * _tmp239 + _tmp232 * _tmp238;
  const Scalar _tmp247 =
      -_tmp219 * _tmp82 + _tmp220 * _tmp235 + _tmp228 * _tmp238 - _tmp229 * _tmp233;
  const Scalar _tmp248 =
      _tmp219 * _tmp220 - _tmp228 * _tmp229 - _tmp233 * _tmp238 + _tmp235 * _tmp82;
  const Scalar _tmp249 =
      _tmp219 * _tmp233 + _tmp220 * _tmp238 - _tmp228 * _tmp235 - _tmp229 * _tmp82;
  const Scalar _tmp250 = -_tmp241 * _tmp247 - _tmp243 * _tmp248 - _tmp249 * _tmp8;
  const Scalar _tmp251 =
      _tmp219 * _tmp228 + _tmp220 * _tmp229 + _tmp233 * _tmp235 + _tmp238 * _tmp82;
  const Scalar _tmp252 = _tmp245 * _tmp251;
  const Scalar _tmp253 = _tmp250 - _tmp252;
  const Scalar _tmp254 = std::fabs(_tmp253);
  const Scalar _tmp255 = 1 - epsilon;
  const Scalar _tmp256 = std::min<Scalar>(_tmp254, _tmp255);
  const Scalar _tmp257 = 1 - std::pow(_tmp256, Scalar(2));
  const Scalar _tmp258 =
      2 * std::min<Scalar>(0, (((-_tmp250 + _tmp252) > 0) - ((-_tmp250 + _tmp252) < 0))) + 1;
  const Scalar _tmp259 = _tmp258 * std::acos(_tmp256);
  const Scalar _tmp260 = 2 * _tmp259 / std::sqrt(_tmp257);
  const Scalar _tmp261 =
      -_tmp241 * _tmp251 + _tmp243 * _tmp249 + _tmp245 * _tmp247 - _tmp248 * _tmp8;
  const Scalar _tmp262 =
      ((((-_tmp254 + _tmp255) > 0) - ((-_tmp254 + _tmp255) < 0)) + 1) *
      (-_tmp240 * _tmp243 - _tmp241 * _tmp246 - _tmp242 * _tmp245 - _tmp244 * _tmp8) *
      (((_tmp253) > 0) - ((_tmp253) < 0));
  const Scalar _tmp263 = _tmp258 / _tmp257;
  const Scalar _tmp264 = _tmp262 * _tmp263;
  const Scalar _tmp265 = _tmp256 * _tmp259 / (_tmp257 * std::sqrt(_tmp257));
  const Scalar _tmp266 = _tmp262 * _tmp265;
  const Scalar _tmp267 =
      _tmp262 * (_tmp241 * _tmp248 - _tmp243 * _tmp247 + _tmp245 * _tmp249 - _tmp251 * _tmp8);
  const Scalar _tmp268 =
      -_tmp241 * _tmp249 - _tmp243 * _tmp251 + _tmp245 * _tmp248 + _tmp247 * _tmp8;

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) =
      _tmp260 * (-_tmp240 * _tmp8 - _tmp241 * _tmp242 + _tmp243 * _tmp244 + _tmp245 * _tmp246) -
      _tmp261 * _tmp264 + _tmp261 * _tmp266;
  _res(1, 0) =
      _tmp260 * (_tmp240 * _tmp241 - _tmp242 * _tmp8 - _tmp243 * _tmp246 + _tmp244 * _tmp245) -
      _tmp263 * _tmp267 + _tmp265 * _tmp267;
  _res(2, 0) =
      _tmp260 * (_tmp240 * _tmp245 - _tmp241 * _tmp244 - _tmp242 * _tmp243 + _tmp246 * _tmp8) -
      _tmp264 * _tmp268 + _tmp266 * _tmp268;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
