// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: error_model_func_wrt_offset1
 *
 * Args:
 *     theta11: Scalar
 *     theta12: Scalar
 *     theta21: Scalar
 *     theta22: Scalar
 *     offset1: Scalar
 *     offset2: Scalar
 *     alpha: Scalar
 *     beta: Scalar
 *     RotGT1: Rot3
 *     RotGT2: Rot3
 *     RotHandEye: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> ErrorModelFuncWrtOffset1(
    const Scalar theta11, const Scalar theta12, const Scalar theta21, const Scalar theta22,
    const Scalar offset1, const Scalar offset2, const Scalar alpha, const Scalar beta,
    const sym::Rot3<Scalar>& RotGT1, const sym::Rot3<Scalar>& RotGT2,
    const sym::Rot3<Scalar>& RotHandEye, const Scalar epsilon) {
  // Total ops: 906

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT1 = RotGT1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotGT2 = RotGT2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _RotHandEye = RotHandEye.Data();

  // Intermediate terms (265)
  const Scalar _tmp0 = _RotGT1[0] * _RotGT2[0] + _RotGT1[1] * _RotGT2[1] + _RotGT1[2] * _RotGT2[2] +
                       _RotGT1[3] * _RotGT2[3];
  const Scalar _tmp1 = -_RotGT1[0] * _RotGT2[3] - _RotGT1[1] * _RotGT2[2] +
                       _RotGT1[2] * _RotGT2[1] + _RotGT1[3] * _RotGT2[0];
  const Scalar _tmp2 = _RotGT1[0] * _RotGT2[2] - _RotGT1[1] * _RotGT2[3] - _RotGT1[2] * _RotGT2[0] +
                       _RotGT1[3] * _RotGT2[1];
  const Scalar _tmp3 = -_RotGT1[0] * _RotGT2[1] + _RotGT1[1] * _RotGT2[0] -
                       _RotGT1[2] * _RotGT2[3] + _RotGT1[3] * _RotGT2[2];
  const Scalar _tmp4 = _RotHandEye[0] * _tmp1 + _RotHandEye[1] * _tmp2 + _RotHandEye[2] * _tmp3 +
                       _RotHandEye[3] * _tmp0;
  const Scalar _tmp5 = -_RotHandEye[0] * _tmp2 + _RotHandEye[1] * _tmp1 - _RotHandEye[2] * _tmp0 +
                       _RotHandEye[3] * _tmp3;
  const Scalar _tmp6 = -_RotHandEye[0] * _tmp0 - _RotHandEye[1] * _tmp3 + _RotHandEye[2] * _tmp2 +
                       _RotHandEye[3] * _tmp1;
  const Scalar _tmp7 = _RotHandEye[0] * _tmp3 - _RotHandEye[1] * _tmp0 - _RotHandEye[2] * _tmp1 +
                       _RotHandEye[3] * _tmp2;
  const Scalar _tmp8 = _RotHandEye[0] * _tmp4 - _RotHandEye[1] * _tmp5 + _RotHandEye[2] * _tmp7 +
                       _RotHandEye[3] * _tmp6;
  const Scalar _tmp9 = std::sin(beta);
  const Scalar _tmp10 = Scalar(1.0) / (_tmp9);
  const Scalar _tmp11 = std::cos(alpha);
  const Scalar _tmp12 = _tmp11 + std::cos(beta);
  const Scalar _tmp13 = Scalar(1.0) / (_tmp12);
  const Scalar _tmp14 = std::pow(_tmp9, Scalar(2));
  const Scalar _tmp15 = std::sin(alpha);
  const Scalar _tmp16 = std::pow(_tmp15, Scalar(2));
  const Scalar _tmp17 = offset2 + theta22;
  const Scalar _tmp18 = offset1 + theta21;
  const Scalar _tmp19 = -Scalar(1) / Scalar(2) * _tmp17 + (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = std::sin(_tmp19);
  const Scalar _tmp21 = std::sqrt(Scalar(_tmp14 - _tmp16 * std::pow(_tmp20, Scalar(2))));
  const Scalar _tmp22 = std::cos(_tmp19);
  const Scalar _tmp23 = _tmp15 * _tmp22 + _tmp21;
  const Scalar _tmp24 = 2 * std::atan(_tmp13 * _tmp23);
  const Scalar _tmp25 = std::cos(_tmp24);
  const Scalar _tmp26 = _tmp15 * std::sin(_tmp18);
  const Scalar _tmp27 = _tmp25 * _tmp26;
  const Scalar _tmp28 = (Scalar(1) / Scalar(2)) * _tmp17 + (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp29 = std::sin(_tmp28);
  const Scalar _tmp30 = std::sin(_tmp24);
  const Scalar _tmp31 = _tmp11 * _tmp30;
  const Scalar _tmp32 = _tmp29 * _tmp31;
  const Scalar _tmp33 = _tmp27 - _tmp32;
  const Scalar _tmp34 = std::cos(_tmp28);
  const Scalar _tmp35 = _tmp26 * _tmp30;
  const Scalar _tmp36 = _tmp15 * std::cos(_tmp18);
  const Scalar _tmp37 = _tmp30 * _tmp36;
  const Scalar _tmp38 = _tmp29 * _tmp37 - _tmp34 * _tmp35;
  const Scalar _tmp39 = _tmp36 * _tmp38;
  const Scalar _tmp40 = _tmp10 * (-_tmp11 * _tmp33 + _tmp39);
  const Scalar _tmp41 = _tmp10 * _tmp33;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp25 * _tmp36;
  const Scalar _tmp44 = _tmp31 * _tmp34;
  const Scalar _tmp45 = -_tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp10 * _tmp45;
  const Scalar _tmp47 = -_tmp26 * _tmp38;
  const Scalar _tmp48 = _tmp10 * (_tmp11 * _tmp45 + _tmp47);
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = -_tmp11;
  const Scalar _tmp51 = _tmp50 + 1;
  const Scalar _tmp52 = _tmp46 + _tmp49 + _tmp51;
  const Scalar _tmp53 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp52)));
  const Scalar _tmp54 = _tmp11 + _tmp46;
  const Scalar _tmp55 = _tmp48 + _tmp54;
  const Scalar _tmp56 =
      -std::max<Scalar>(_tmp11, std::max<Scalar>(_tmp46, std::max<Scalar>(_tmp48, _tmp55)));
  const Scalar _tmp57 = _tmp48 + _tmp56;
  const Scalar _tmp58 = 1 - std::max<Scalar>(0, -(((_tmp57) > 0) - ((_tmp57) < 0)));
  const Scalar _tmp59 = std::min<Scalar>(
      1 - std::max<Scalar>(0, _tmp58),
      1 - std::max<Scalar>(0, -(((_tmp46 + _tmp56) > 0) - ((_tmp46 + _tmp56) < 0))));
  const Scalar _tmp60 = _tmp53 - _tmp59 + 1;
  const Scalar _tmp61 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp62 = _tmp61 / _tmp60;
  const Scalar _tmp63 = _tmp10 * _tmp38;
  const Scalar _tmp64 = _tmp26 - _tmp63;
  const Scalar _tmp65 = _tmp55 + 1;
  const Scalar _tmp66 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp65)));
  const Scalar _tmp67 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp58, _tmp59)),
      1 - std::max<Scalar>(0, -(((_tmp11 + _tmp56) > 0) - ((_tmp11 + _tmp56) < 0))));
  const Scalar _tmp68 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp58, std::max<Scalar>(_tmp59, _tmp67))),
      1 - std::max<Scalar>(0, -(((_tmp54 + _tmp57) > 0) - ((_tmp54 + _tmp57) < 0))));
  const Scalar _tmp69 = _tmp66 - _tmp68 + 1;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp68;
  const Scalar _tmp71 = _tmp70 / _tmp69;
  const Scalar _tmp72 = -_tmp46;
  const Scalar _tmp73 = _tmp48 + _tmp51 + _tmp72;
  const Scalar _tmp74 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp73)));
  const Scalar _tmp75 = -_tmp58 + _tmp74 + 1;
  const Scalar _tmp76 = (Scalar(1) / Scalar(2)) * _tmp58;
  const Scalar _tmp77 = _tmp10 * (_tmp26 * _tmp33 - _tmp36 * _tmp45);
  const Scalar _tmp78 = _tmp36 + _tmp77;
  const Scalar _tmp79 = _tmp11 + _tmp49 + _tmp72 + 1;
  const Scalar _tmp80 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp79)));
  const Scalar _tmp81 = -_tmp67 + _tmp80 + 1;
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp67;
  const Scalar _tmp83 = _tmp82 / _tmp81;
  const Scalar _tmp84 = _tmp42 * _tmp62 + _tmp64 * _tmp71 + _tmp75 * _tmp76 + _tmp78 * _tmp83;
  const Scalar _tmp85 = offset2 + theta12;
  const Scalar _tmp86 = offset1 + theta11;
  const Scalar _tmp87 = -Scalar(1) / Scalar(2) * _tmp85 + (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp88 = std::sin(_tmp87);
  const Scalar _tmp89 = std::sqrt(Scalar(_tmp14 - _tmp16 * std::pow(_tmp88, Scalar(2))));
  const Scalar _tmp90 = std::cos(_tmp87);
  const Scalar _tmp91 = _tmp15 * _tmp90 + _tmp89;
  const Scalar _tmp92 = 2 * std::atan(_tmp13 * _tmp91);
  const Scalar _tmp93 = std::cos(_tmp92);
  const Scalar _tmp94 = _tmp15 * std::sin(_tmp86);
  const Scalar _tmp95 = _tmp93 * _tmp94;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp85 + (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp97 = std::sin(_tmp96);
  const Scalar _tmp98 = std::sin(_tmp92);
  const Scalar _tmp99 = _tmp11 * _tmp98;
  const Scalar _tmp100 = _tmp97 * _tmp99;
  const Scalar _tmp101 = -_tmp100 + _tmp95;
  const Scalar _tmp102 = std::cos(_tmp96);
  const Scalar _tmp103 = _tmp102 * _tmp98;
  const Scalar _tmp104 = _tmp15 * std::cos(_tmp86);
  const Scalar _tmp105 = _tmp97 * _tmp98;
  const Scalar _tmp106 = -_tmp103 * _tmp94 + _tmp104 * _tmp105;
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp10 * (-_tmp101 * _tmp11 + _tmp107);
  const Scalar _tmp109 = _tmp10 * _tmp101;
  const Scalar _tmp110 = _tmp108 + _tmp109;
  const Scalar _tmp111 = _tmp104 * _tmp93;
  const Scalar _tmp112 = _tmp102 * _tmp99;
  const Scalar _tmp113 = -_tmp111 + _tmp112;
  const Scalar _tmp114 = -_tmp106 * _tmp94;
  const Scalar _tmp115 = _tmp10 * (_tmp11 * _tmp113 + _tmp114);
  const Scalar _tmp116 = _tmp10 * _tmp113;
  const Scalar _tmp117 = _tmp11 + _tmp116;
  const Scalar _tmp118 = _tmp115 + _tmp117;
  const Scalar _tmp119 =
      -std::max<Scalar>(_tmp11, std::max<Scalar>(_tmp115, std::max<Scalar>(_tmp116, _tmp118)));
  const Scalar _tmp120 = _tmp115 + _tmp119;
  const Scalar _tmp121 = 1 - std::max<Scalar>(0, -(((_tmp120) > 0) - ((_tmp120) < 0)));
  const Scalar _tmp122 = std::min<Scalar>(
      1 - std::max<Scalar>(0, _tmp121),
      1 - std::max<Scalar>(0, -(((_tmp116 + _tmp119) > 0) - ((_tmp116 + _tmp119) < 0))));
  const Scalar _tmp123 = -_tmp115;
  const Scalar _tmp124 = _tmp116 + _tmp123 + _tmp51;
  const Scalar _tmp125 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp124)));
  const Scalar _tmp126 = -_tmp122 + _tmp125 + 1;
  const Scalar _tmp127 = (Scalar(1) / Scalar(2)) * _tmp122;
  const Scalar _tmp128 = _tmp127 / _tmp126;
  const Scalar _tmp129 = 1 - _tmp116;
  const Scalar _tmp130 = _tmp115 + _tmp129 + _tmp50;
  const Scalar _tmp131 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp130)));
  const Scalar _tmp132 = -_tmp121 + _tmp131 + 1;
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp121;
  const Scalar _tmp134 = _tmp10 * (_tmp101 * _tmp94 - _tmp104 * _tmp113);
  const Scalar _tmp135 = _tmp104 + _tmp134;
  const Scalar _tmp136 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp121, _tmp122)),
      1 - std::max<Scalar>(0, -(((_tmp11 + _tmp119) > 0) - ((_tmp11 + _tmp119) < 0))));
  const Scalar _tmp137 = _tmp11 + _tmp123 + _tmp129;
  const Scalar _tmp138 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp137)));
  const Scalar _tmp139 = -_tmp136 + _tmp138 + 1;
  const Scalar _tmp140 = (Scalar(1) / Scalar(2)) * _tmp136;
  const Scalar _tmp141 = _tmp140 / _tmp139;
  const Scalar _tmp142 = _tmp10 * _tmp106;
  const Scalar _tmp143 = -_tmp142 + _tmp94;
  const Scalar _tmp144 = std::min<Scalar>(
      1 - std::max<Scalar>(0, std::max<Scalar>(_tmp121, std::max<Scalar>(_tmp122, _tmp136))),
      1 - std::max<Scalar>(0, -(((_tmp117 + _tmp120) > 0) - ((_tmp117 + _tmp120) < 0))));
  const Scalar _tmp145 = _tmp118 + 1;
  const Scalar _tmp146 = std::sqrt(Scalar(std::max<Scalar>(0, _tmp145)));
  const Scalar _tmp147 = -_tmp144 + _tmp146 + 1;
  const Scalar _tmp148 = (Scalar(1) / Scalar(2)) * _tmp144;
  const Scalar _tmp149 = _tmp148 / _tmp147;
  const Scalar _tmp150 =
      _tmp110 * _tmp128 + _tmp132 * _tmp133 + _tmp135 * _tmp141 + _tmp143 * _tmp149;
  const Scalar _tmp151 = _tmp76 / _tmp75;
  const Scalar _tmp152 = -_tmp40 + _tmp41;
  const Scalar _tmp153 = _tmp26 + _tmp63;
  const Scalar _tmp154 = _tmp151 * _tmp78 + _tmp152 * _tmp71 + _tmp153 * _tmp62 + _tmp81 * _tmp82;
  const Scalar _tmp155 = _tmp142 + _tmp94;
  const Scalar _tmp156 = _tmp133 / _tmp132;
  const Scalar _tmp157 = -_tmp108 + _tmp109;
  const Scalar _tmp158 =
      _tmp128 * _tmp155 + _tmp135 * _tmp156 + _tmp139 * _tmp140 + _tmp149 * _tmp157;
  const Scalar _tmp159 = -_tmp104 + _tmp134;
  const Scalar _tmp160 =
      _tmp110 * _tmp156 + _tmp126 * _tmp127 + _tmp141 * _tmp155 + _tmp149 * _tmp159;
  const Scalar _tmp161 = -_tmp36 + _tmp77;
  const Scalar _tmp162 = _tmp151 * _tmp42 + _tmp153 * _tmp83 + _tmp161 * _tmp71 + _tmp60 * _tmp61;
  const Scalar _tmp163 =
      _tmp128 * _tmp159 + _tmp141 * _tmp157 + _tmp143 * _tmp156 + _tmp147 * _tmp148;
  const Scalar _tmp164 = _tmp151 * _tmp64 + _tmp152 * _tmp83 + _tmp161 * _tmp62 + _tmp69 * _tmp70;
  const Scalar _tmp165 =
      _tmp150 * _tmp84 + _tmp154 * _tmp158 + _tmp160 * _tmp162 + _tmp163 * _tmp164;
  const Scalar _tmp166 = _RotHandEye[0] * _tmp5 + _RotHandEye[1] * _tmp4 - _RotHandEye[2] * _tmp6 +
                         _RotHandEye[3] * _tmp7;
  const Scalar _tmp167 =
      -_tmp150 * _tmp162 + _tmp154 * _tmp163 - _tmp158 * _tmp164 + _tmp160 * _tmp84;
  const Scalar _tmp168 =
      -_tmp150 * _tmp164 - _tmp154 * _tmp160 + _tmp158 * _tmp162 + _tmp163 * _tmp84;
  const Scalar _tmp169 = -_RotHandEye[0] * _tmp6 - _RotHandEye[1] * _tmp7 - _RotHandEye[2] * _tmp5 +
                         _RotHandEye[3] * _tmp4;
  const Scalar _tmp170 = -_RotHandEye[0] * _tmp7 + _RotHandEye[1] * _tmp6 + _RotHandEye[2] * _tmp4 +
                         _RotHandEye[3] * _tmp5;
  const Scalar _tmp171 =
      _tmp150 * _tmp154 - _tmp158 * _tmp84 - _tmp160 * _tmp164 + _tmp162 * _tmp163;
  const Scalar _tmp172 =
      -_tmp165 * _tmp8 - _tmp166 * _tmp167 + _tmp168 * _tmp169 + _tmp170 * _tmp171;
  const Scalar _tmp173 = -_tmp166 * _tmp171 - _tmp167 * _tmp170 - _tmp168 * _tmp8;
  const Scalar _tmp174 = _tmp165 * _tmp169;
  const Scalar _tmp175 = _tmp173 - _tmp174;
  const Scalar _tmp176 = std::fabs(_tmp175);
  const Scalar _tmp177 = 1 - epsilon;
  const Scalar _tmp178 = std::pow(_tmp12, Scalar(-2));
  const Scalar _tmp179 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp180 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp181 = 2 * _tmp13;
  const Scalar _tmp182 = _tmp181 * (-_tmp179 * _tmp20 * _tmp22 / _tmp21 - _tmp180 * _tmp20) /
                         (_tmp178 * std::pow(_tmp23, Scalar(2)) + 1);
  const Scalar _tmp183 = _tmp182 * _tmp34;
  const Scalar _tmp184 = _tmp11 * _tmp25;
  const Scalar _tmp185 =
      _tmp182 * _tmp37 + _tmp183 * _tmp184 + _tmp27 - Scalar(1) / Scalar(2) * _tmp32;
  const Scalar _tmp186 = _tmp10 * _tmp185;
  const Scalar _tmp187 = -_tmp186;
  const Scalar _tmp188 = _tmp182 * _tmp29;
  const Scalar _tmp189 = -_tmp183 * _tmp27 + _tmp188 * _tmp43 -
                         Scalar(1) / Scalar(2) * _tmp29 * _tmp35 -
                         Scalar(1) / Scalar(2) * _tmp34 * _tmp37;
  const Scalar _tmp190 = _tmp10 * (_tmp11 * _tmp185 - _tmp189 * _tmp26 - _tmp39);
  const Scalar _tmp191 = -_tmp190;
  const Scalar _tmp192 = (Scalar(1) / Scalar(8)) * _tmp67 * (_tmp187 + _tmp191) *
                         ((((_tmp79) > 0) - ((_tmp79) < 0)) + 1) / _tmp80;
  const Scalar _tmp193 = _tmp192 / std::pow(_tmp81, Scalar(2));
  const Scalar _tmp194 = _tmp10 * _tmp189;
  const Scalar _tmp195 = _tmp194 + _tmp36;
  const Scalar _tmp196 =
      -_tmp182 * _tmp35 - _tmp184 * _tmp188 + _tmp43 - Scalar(1) / Scalar(2) * _tmp44;
  const Scalar _tmp197 = _tmp10 * (-_tmp11 * _tmp196 + _tmp189 * _tmp36 + _tmp47);
  const Scalar _tmp198 = _tmp10 * _tmp196;
  const Scalar _tmp199 = _tmp197 + _tmp198;
  const Scalar _tmp200 = (Scalar(1) / Scalar(8)) * _tmp58 * (_tmp187 + _tmp190) *
                         ((((_tmp73) > 0) - ((_tmp73) < 0)) + 1) / _tmp74;
  const Scalar _tmp201 = _tmp200 / std::pow(_tmp75, Scalar(2));
  const Scalar _tmp202 = (Scalar(1) / Scalar(8)) * _tmp59 * (_tmp186 + _tmp191) *
                         ((((_tmp52) > 0) - ((_tmp52) < 0)) + 1) / _tmp53;
  const Scalar _tmp203 = (Scalar(1) / Scalar(8)) * _tmp68 * (_tmp186 + _tmp190) *
                         ((((_tmp65) > 0) - ((_tmp65) < 0)) + 1) / _tmp66;
  const Scalar _tmp204 = _tmp203 / std::pow(_tmp69, Scalar(2));
  const Scalar _tmp205 =
      _tmp10 * (-_tmp185 * _tmp36 + _tmp196 * _tmp26 + _tmp26 * _tmp45 + _tmp33 * _tmp36);
  const Scalar _tmp206 = _tmp205 + _tmp26;
  const Scalar _tmp207 = _tmp151 * _tmp199 - _tmp153 * _tmp193 - _tmp161 * _tmp204 +
                         _tmp195 * _tmp83 - _tmp201 * _tmp42 + _tmp202 + _tmp206 * _tmp71;
  const Scalar _tmp208 = -_tmp197 + _tmp198;
  const Scalar _tmp209 = _tmp202 / std::pow(_tmp60, Scalar(2));
  const Scalar _tmp210 = _tmp205 - _tmp26;
  const Scalar _tmp211 = _tmp151 * _tmp210 - _tmp152 * _tmp204 - _tmp153 * _tmp209 + _tmp192 +
                         _tmp195 * _tmp62 - _tmp201 * _tmp78 + _tmp208 * _tmp71;
  const Scalar _tmp212 = _tmp181 * (-_tmp179 * _tmp88 * _tmp90 / _tmp89 - _tmp180 * _tmp88) /
                         (_tmp178 * std::pow(_tmp91, Scalar(2)) + 1);
  const Scalar _tmp213 = _tmp212 * _tmp98;
  const Scalar _tmp214 = _tmp11 * _tmp93;
  const Scalar _tmp215 = _tmp102 * _tmp212;
  const Scalar _tmp216 =
      -Scalar(1) / Scalar(2) * _tmp100 + _tmp104 * _tmp213 + _tmp214 * _tmp215 + _tmp95;
  const Scalar _tmp217 = _tmp10 * _tmp216;
  const Scalar _tmp218 = -_tmp217;
  const Scalar _tmp219 = _tmp212 * _tmp97;
  const Scalar _tmp220 = -Scalar(1) / Scalar(2) * _tmp103 * _tmp104 -
                         Scalar(1) / Scalar(2) * _tmp105 * _tmp94 + _tmp111 * _tmp219 -
                         _tmp215 * _tmp95;
  const Scalar _tmp221 = _tmp10 * (-_tmp107 + _tmp11 * _tmp216 - _tmp220 * _tmp94);
  const Scalar _tmp222 = (Scalar(1) / Scalar(8)) * _tmp121 * (_tmp218 + _tmp221) *
                         ((((_tmp130) > 0) - ((_tmp130) < 0)) + 1) / _tmp131;
  const Scalar _tmp223 = -_tmp221;
  const Scalar _tmp224 = (Scalar(1) / Scalar(8)) * _tmp136 * (_tmp218 + _tmp223) *
                         ((((_tmp137) > 0) - ((_tmp137) < 0)) + 1) / _tmp138;
  const Scalar _tmp225 = _tmp224 / std::pow(_tmp139, Scalar(2));
  const Scalar _tmp226 =
      _tmp111 - Scalar(1) / Scalar(2) * _tmp112 - _tmp213 * _tmp94 - _tmp214 * _tmp219;
  const Scalar _tmp227 = _tmp10 * (_tmp104 * _tmp220 - _tmp11 * _tmp226 + _tmp114);
  const Scalar _tmp228 = _tmp10 * _tmp226;
  const Scalar _tmp229 = _tmp227 + _tmp228;
  const Scalar _tmp230 = (Scalar(1) / Scalar(8)) * _tmp144 * (_tmp217 + _tmp221) *
                         ((((_tmp145) > 0) - ((_tmp145) < 0)) + 1) / _tmp146;
  const Scalar _tmp231 = _tmp230 / std::pow(_tmp147, Scalar(2));
  const Scalar _tmp232 = (Scalar(1) / Scalar(8)) * _tmp122 * (_tmp217 + _tmp223) *
                         ((((_tmp124) > 0) - ((_tmp124) < 0)) + 1) / _tmp125;
  const Scalar _tmp233 = _tmp232 / std::pow(_tmp126, Scalar(2));
  const Scalar _tmp234 = _tmp10 * _tmp220;
  const Scalar _tmp235 = _tmp104 - _tmp234;
  const Scalar _tmp236 =
      _tmp10 * (_tmp101 * _tmp104 - _tmp104 * _tmp216 + _tmp113 * _tmp94 + _tmp226 * _tmp94);
  const Scalar _tmp237 = _tmp236 - _tmp94;
  const Scalar _tmp238 = -_tmp110 * _tmp233 + _tmp128 * _tmp229 - _tmp135 * _tmp225 +
                         _tmp141 * _tmp237 - _tmp143 * _tmp231 + _tmp149 * _tmp235 + _tmp222;
  const Scalar _tmp239 = -_tmp194 + _tmp36;
  const Scalar _tmp240 = _tmp151 * _tmp239 - _tmp152 * _tmp193 - _tmp161 * _tmp209 -
                         _tmp201 * _tmp64 + _tmp203 + _tmp206 * _tmp62 + _tmp208 * _tmp83;
  const Scalar _tmp241 = _tmp104 + _tmp234;
  const Scalar _tmp242 = _tmp222 / std::pow(_tmp132, Scalar(2));
  const Scalar _tmp243 = _tmp236 + _tmp94;
  const Scalar _tmp244 = -_tmp110 * _tmp242 + _tmp141 * _tmp241 + _tmp149 * _tmp243 -
                         _tmp155 * _tmp225 + _tmp156 * _tmp229 - _tmp159 * _tmp231 + _tmp232;
  const Scalar _tmp245 = -_tmp227 + _tmp228;
  const Scalar _tmp246 = _tmp128 * _tmp241 - _tmp135 * _tmp242 + _tmp149 * _tmp245 -
                         _tmp155 * _tmp233 + _tmp156 * _tmp237 - _tmp157 * _tmp231 + _tmp224;
  const Scalar _tmp247 = _tmp128 * _tmp243 + _tmp141 * _tmp245 - _tmp143 * _tmp242 +
                         _tmp156 * _tmp235 - _tmp157 * _tmp225 - _tmp159 * _tmp233 + _tmp230;
  const Scalar _tmp248 = -_tmp193 * _tmp78 + _tmp199 * _tmp62 + _tmp200 - _tmp204 * _tmp64 -
                         _tmp209 * _tmp42 + _tmp210 * _tmp83 + _tmp239 * _tmp71;
  const Scalar _tmp249 = -_tmp150 * _tmp207 + _tmp154 * _tmp247 - _tmp158 * _tmp240 +
                         _tmp160 * _tmp248 - _tmp162 * _tmp238 + _tmp163 * _tmp211 -
                         _tmp164 * _tmp246 + _tmp244 * _tmp84;
  const Scalar _tmp250 = -_tmp150 * _tmp240 - _tmp154 * _tmp244 + _tmp158 * _tmp207 -
                         _tmp160 * _tmp211 + _tmp162 * _tmp246 + _tmp163 * _tmp248 -
                         _tmp164 * _tmp238 + _tmp247 * _tmp84;
  const Scalar _tmp251 = _tmp150 * _tmp248 + _tmp154 * _tmp246 + _tmp158 * _tmp211 +
                         _tmp160 * _tmp207 + _tmp162 * _tmp244 + _tmp163 * _tmp240 +
                         _tmp164 * _tmp247 + _tmp238 * _tmp84;
  const Scalar _tmp252 = _tmp150 * _tmp211 + _tmp154 * _tmp238 - _tmp158 * _tmp248 -
                         _tmp160 * _tmp240 + _tmp162 * _tmp247 + _tmp163 * _tmp207 -
                         _tmp164 * _tmp244 - _tmp246 * _tmp84;
  const Scalar _tmp253 =
      ((((-_tmp176 + _tmp177) > 0) - ((-_tmp176 + _tmp177) < 0)) + 1) *
      (-_tmp166 * _tmp252 - _tmp169 * _tmp251 - _tmp170 * _tmp249 - _tmp250 * _tmp8) *
      (((_tmp175) > 0) - ((_tmp175) < 0));
  const Scalar _tmp254 =
      2 * std::min<Scalar>(0, (((-_tmp173 + _tmp174) > 0) - ((-_tmp173 + _tmp174) < 0))) + 1;
  const Scalar _tmp255 = std::min<Scalar>(_tmp176, _tmp177);
  const Scalar _tmp256 = 1 - std::pow(_tmp255, Scalar(2));
  const Scalar _tmp257 = _tmp254 / _tmp256;
  const Scalar _tmp258 = _tmp253 * _tmp257;
  const Scalar _tmp259 = _tmp254 * std::acos(_tmp255);
  const Scalar _tmp260 = 2 * _tmp259 / std::sqrt(_tmp256);
  const Scalar _tmp261 = _tmp255 * _tmp259 / (_tmp256 * std::sqrt(_tmp256));
  const Scalar _tmp262 = _tmp253 * _tmp261;
  const Scalar _tmp263 =
      _tmp253 * (-_tmp165 * _tmp166 + _tmp167 * _tmp8 - _tmp168 * _tmp170 + _tmp169 * _tmp171);
  const Scalar _tmp264 =
      -_tmp165 * _tmp170 + _tmp166 * _tmp168 + _tmp167 * _tmp169 - _tmp171 * _tmp8;

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) =
      -_tmp172 * _tmp258 + _tmp172 * _tmp262 +
      _tmp260 * (-_tmp166 * _tmp249 + _tmp169 * _tmp250 + _tmp170 * _tmp252 - _tmp251 * _tmp8);
  _res(1, 0) =
      -_tmp257 * _tmp263 +
      _tmp260 * (-_tmp166 * _tmp251 + _tmp169 * _tmp252 - _tmp170 * _tmp250 + _tmp249 * _tmp8) +
      _tmp261 * _tmp263;
  _res(2, 0) =
      -_tmp258 * _tmp264 +
      _tmp260 * (_tmp166 * _tmp250 + _tmp169 * _tmp249 - _tmp170 * _tmp251 - _tmp252 * _tmp8) +
      _tmp262 * _tmp264;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
